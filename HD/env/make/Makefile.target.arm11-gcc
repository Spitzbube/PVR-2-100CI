################################################################################
################################################################################
##
## Makefile -- Linux GNU GCC specific ARM11 settings
##
## (C) Copyright 2012-2013 by Goke Microelectronics Co.,Ltd
##
## This include makefile defines internal make variables to support
## the cross tool chain for ARM11 GCC running under linux (/opt/crosstool_4.x.x).
##
################################################################################
################################################################################

SDKHOME-arm11-gcc	 ?= SDKHOME-arm11-gcc-UNDEFINED
SDKHOME               = $(SDKHOME-arm11-gcc)
TARGET_SUBDIR         = M-$(TARGET)

  VARIABLES += SDKHOME
  VARIABLES += TARGET_SUBDIR

OBJECT_EXT  = .o
LIBRARY_EXT = .a
PROGRAM_EXT = .elf
DLL_EXT     = .so
SHARED_EXT  = .so

  VARIABLES += OBJECT_EXT
  VARIABLES += LIBRARY_EXT
  VARIABLES += PROGRAM_EXT
  VARIABLES += DLL_EXT

#NEWPATH = "$(subst /,\\,$(SDKHOME)\bin);$(PATH)"
#PATH := $(NEWPATH)
#export PATH

CODE_SEGMENT_READONLY ?= 0
  VARIABLES += CODE_SEGMENT_READONLY

PROGRAM_MEMORY_START ?= $(ARM_PROGRAM_MEMORY_START)
PROGRAM_MEMORY_BYTES ?= $(ARM_PROGRAM_MEMORY_BYTES)
PROGRAM_STACK_BYTES  ?= $(ARM_PROGRAM_STACK_BYTES)
PROGRAM_HEAP_BYTES   ?= $(ARM_PROGRAM_HEAP_BYTES)
PROGRAM_LOAD_ADDRESS ?= $(ARM_PROGRAM_LOAD_ADDRESS)
ifdef PROFILE
PROGRAM_STARTUP      ?= $(INSTALL_LIBRARY_DIR)/libstartup$(LIBRARY_PROFILE_EXT)
else
PROGRAM_STARTUP      ?= $(INSTALL_LIBRARY_DIR)/libstartup$(LIBRARY_DEBUG_EXT)
endif

CCTARGET   = arm-elf
CC         = $(SDKHOME)/bin/$(CCTARGET)-gcc$(TOOL_EXT)
CXX        = $(SDKHOME)/bin/$(CCTARGET)-g++$(TOOL_EXT)
#CCVERSION := $(shell "$(CC)" -dumpversion)

################################################################################
#CCFLAGS   += -D$(BOARD)
#CCFLAGS   += -DBOARDNAME="\"$(BOARDNAME)\""
#CCFLAGS   += -DBOARD_INCLUDE_FILE="\"boards/$(BOARDNAME).h\""
#CCFLAGS   += -D$(DECODER)
CCFLAGS    = -mcpu=arm1176jzf-s
CCFLAGS   += -O2
CCFLAGS   += -fno-delete-null-pointer-checks
CCFLAGS   += -fno-tree-vrp
CCFLAGS   += -marm
CCFLAGS   += -mabi=apcs-gnu
CCFLAGS   += -mfpu=fpa
CCFLAGS   += -mthumb-interwork
CCFLAGS   += -mlittle-endian
CCFLAGS   += -funsigned-char
CCFLAGS   += -Wall
CCFLAGS   += -DPROGRAM_STACK_BYTES=$(PROGRAM_STACK_BYTES)
CCFLAGS   += -DPROGRAM_HEAP_BYTES=$(PROGRAM_HEAP_BYTES)
CCFLAGS   += $(INSTALL_INCLUDE_DIRECTORIES:%=-I%)
CCFLAGS   += -I$(TOPDIR)/env/cc/include 

ifeq ($(CODE_SEGMENT_READONLY),1)
CCFLAGS     += -DCODE_SEGMENT_READONLY=$(CODE_SEGMENT_READONLY)
endif
#CCDEBUG   += -gdwarf-2
CCDEBUG   += -g
CCDEBUG   += -O0
CCGPROF   += $(CCDEBUG)
CCGPROF   += -finstrument-functions
CCFLAGS_C  =
CCFLAGS_AS = -x assembler-with-cpp
CCFLAGS_PP = -E
CC_out     = -o $(SPACE)

  VARIABLES += CC
  VARIABLES += CCFLAGS
  VARIABLES += CCDEBUG
  VARIABLES += CCGPROF
  VARIABLES += CCFLAGS_C
  VARIABLES += CCFLAGS_AS
  VARIABLES += CC_out
  VARIABLES += CCFLAGS_USER

AR       = $(SDKHOME)/bin/$(CCTARGET)-ar$(TOOL_EXT)
ARFLAGS  = crs
AR_out   = $(SPACE)

  VARIABLES += AR
  VARIABLES += ARFLAGS
  VARIABLES += AR_out
  VARIABLES += ARFLAGS_USER

LINTFLAGS += -cgnu
LINTFLAGS += -i$(TOPDIR)/env/lint
LINTFLAGS += gk-arm11.lnt

LD       = $(CC)
LDFLAGS  = $(CCFLAGS)
#LDFLAGS += -L$(BUILD_LIBRARY_SUBDIR)
LDFLAGS += -L$(INSTALL_LIBRARY_DIR)
LDFLAGS += -Wl,--defsym,PROGRAM_MEMORY_START=$(PROGRAM_MEMORY_START)
LDFLAGS += -Wl,--defsym,PROGRAM_MEMORY_BYTES=$(PROGRAM_MEMORY_BYTES)
LDFLAGS += -Wl,--defsym,PROGRAM_STACK_BYTES=$(PROGRAM_STACK_BYTES)
LDFLAGS += -Wl,--defsym,PROGRAM_HEAP_BYTES=$(PROGRAM_HEAP_BYTES)
LDFLAGS += -Wl,--defsym,PROGRAM_LOAD_ADDRESS=$(PROGRAM_LOAD_ADDRESS)
LDFLAGS += -Wl,-T,$(TOPDIR)/env/make/gcc-static.ld
LDFLAGS += -nodefaultlibs
LDFLAGS += -nostartfiles
LDFLAGS += -static
LDDEBUG  = -g
LDGPROF  = -p
LD_out   = $(CC_out)
LD_crt   = $(INSTALL_LIBRARY_DIR)/arm1176_start_gcc.o
LD_group = -Wl,--start-group
LD_grend = $(PROGRAM_STARTUP) -lc  -lgcc -lm $(LDFLAGS_USER) -Wl,--end-group

  VARIABLES += LD
  VARIABLES += LDFLAGS
  VARIABLES += LDDEBUG
  VARIABLES += LD_out
  VARIABLES += LD_crt
  VARIABLES += LD_group
  VARIABLES += LD_grend
  VARIABLES += LDFLAGS_USER

  VARIABLES += LD
  VARIABLES += LDFLAGS
  VARIABLES += LDDEBUG
  VARIABLES += LD_out
  VARIABLES += LD_crt
  VARIABLES += LD_group
  VARIABLES += LD_grend
  VARIABLES += LDFLAGS_USER


MAKEDEPEND       = perl $(TOPDIR)/env/make/mkdepend.pl
MAKEDEPENDFLAGS += --normal
MAKEDEPENDFLAGS += --cpp='$(CC) -E'
MAKEDEPENDFLAGS += --oext=$(OBJECT_EXT)
MAKEDEPENDFLAGS += --odbgext=$(OBJECT_DEBUG_EXT)
MAKEDEPENDFLAGS += --osubdir=$(BUILD_OBJECT_SUBDIR)
MAKEDEPENDFLAGS += --cppflags='$(subst \,/,$(CCFLAGS)) $(subst \,/,$(CCFLAGS_USER))'

  VARIABLES += MAKEDEPEND
  VARIABLES += MAKEDEPENDFLAGS
  VARIABLES += MAKEDEPENDFLAGS_USER

ELFDUMP      = $(SDKHOME)/bin/$(CCTARGET)-objdump$(TOOL_EXT)
ELFDUMPFLAGS = --all -D
ELFDUMP_out  = >$(SPACE)

  VARIABLES += ELFDUMP
  VARIABLES += ELFDUMPFLAGS
  VARIABLES += ELFDUMP_out
  VARIABLES += ELFDUMPFLAGS_USER

SYMDUMP      = $(SDKHOME)/bin/$(CCTARGET)-nm$(TOOL_EXT)
SYMDUMPFLAGS = --portability --size-sort
SYMDUMP_out  = >$(SPACE)

  VARIABLES += SYMDUMP
  VARIABLES += SYMDUMPFLAGS
  VARIABLES += SYMDUMP_out
  VARIABLES += SYMDUMPFLAGS_USER

STRIP      = $(SDKHOME)/bin/$(CCTARGET)-strip$(TOOL_EXT)
STRIPFLAGS = --strip-all
STRIP_out  = -o$(SPACE)

  VARIABLES += STRIP
  VARIABLES += STRIPFLAGS
  VARIABLES += STRIP_out
  VARIABLES += STRIPFLAGS_USER

#GDBSERVER        = $(TOPDIR)/env/bin/M-$(HOST)/gdbserver$(TOOL_EXT)
#GDBSERVERFLAGS   = -verbose
#GDBSERVERFLAGS  += -dll=$(JTAGPORT_DLL)
#GDBSERVERFLAGS  += $(JTAGPORT_FLAGS)

#DBG       = $(SDKHOME)/bin/$(CCTARGET)-insight$(TOOL_EXT)
#DBGFLAGS  = --directory=$(BUILD_PROGRAM_SUBDIR)
#DBGFLAGS += --command=$(BUILD_PROGRAM_SUBDIR)/.gdbinit
#DBGFLAGS += --nx
#DBGSCRIPT = $(BUILD_PROGRAM_SUBDIR)/.gdbinit

  VARIABLES += DBG
  VARIABLES += DBGFLAGS
  VARIABLES += DBGFLAGS_USER
  VARIABLES += DBGSCRIPT

#TARGET_SUPPORTS_CCACHE = 1

  VARIABLES += TARGET_SUPPORTS_CCACHE

OSSPREBUILD = $(TOPDIR)/linux/rootfs/oss-prebuild-$(C_LIBRARY)
ifeq ($(C_LIBRARY), glibc)
SDKINC   =  $(SDKHOME)/arm-goke-linux-gnueabi/sysroot/usr/include
else
SDKINC   =  $(SDKHOME)/arm-goke-linux-uclibcgnueabi/sysroot/usr/include
endif
#CCFLAGS  += -I$(INSTALL_DIR)/$(TARGET)-$(C_LIBRARY)-$(HOST)-$(DECODER)/include
#CCFLAGS  += -I $(SDKINC)
